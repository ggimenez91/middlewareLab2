<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:ws="http://www.mulesoft.org/schema/mule/ws"
	xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw"
	xmlns:file="http://www.mulesoft.org/schema/mule/file"
	xmlns:jms="http://www.mulesoft.org/schema/mule/jms"
	xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns:http="http://www.mulesoft.org/schema/mule/http"
	xmlns:cxf="http://www.mulesoft.org/schema/mule/cxf"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:spring="http://www.springframework.org/schema/beans" xmlns:json="http://www.mulesoft.org/schema/mule/json"
	xmlns="http://www.mulesoft.org/schema/mule/core" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/ws http://www.mulesoft.org/schema/mule/ws/current/mule-ws.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/cxf http://www.mulesoft.org/schema/mule/cxf/current/mule-cxf.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/jms http://www.mulesoft.org/schema/mule/jms/current/mule-jms.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd
http://www.mulesoft.org/schema/mule/ee/data-mapper http://www.mulesoft.org/schema/mule/ee/data-mapper/current/mule-data-mapper.xsd
http://www.mulesoft.org/schema/mule/xml http://www.mulesoft.org/schema/mule/xml/current/mule-xml.xsd
http://www.mulesoft.org/schema/mule/file http://www.mulesoft.org/schema/mule/file/current/mule-file.xsd">

    <http:listener-config doc:name="HTTP_Listener_Configuration" host="localhost" name="listenerPagosYA" port="8081"/>
    <http:request-config name="HTTP_Request_PagosYa" host="localhost" port="8080" doc:name="HTTP Request Configuration"/>
    
    <http:listener-config name="listenerPublisher" host="localhost" port="63081" doc:name="HTTP Listener Configuration"/>
    <jms:activemq-connector name="ActiveMQ" brokerURL="tcp://localhost:61616" validateConnections="true" doc:name="Active MQ"/>
    <jms:endpoint connector-ref="ActiveMQ" name="JMS" doc:name="JMS" topic="ActiveMQ">
        <jms:transaction action="NOT_SUPPORTED"/>
    </jms:endpoint>
    <ws:consumer-config name="Web_Service_Consumer" wsdlLocation="http://localhost:8080/AmazoniaStockService/services/stockservice?wsdl" service="StockServiceImplService" port="StockServiceImplPort" serviceAddress="http://localhost:8080/AmazoniaStockService/services/stockservice" doc:name="Web Service Consumer"/>
    <http:request-config name="HTTP_Request_Configuration" host="localhost" port="8080" basePath="/AmazoniaStockService" doc:name="HTTP Request Configuration"/>
    <file:connector name="File"  autoDelete="true" streaming="true" validateConnections="true" doc:name="File" />
    
    <http:listener-config name="listenerRespuestaEpuerto" host="localhost" port="63082" doc:name="HTTP Listener Configuration"/>
	<custom-transformer name="CompraACsv" class="amazoniacentral.CompraACsv" doc:name="Java"/>

   
    <http:request-config doc:name="HTTP Request Configuration" host="www.predic8.com" name="HTTP_Request_Configuration2" port="8080"/>
    <http:listener-config name="listenerReservaEpuerto" host="localhost" port="63083" doc:name="HTTP Listener Configuration"/>
    <flow name="servicioPagosYa">
    	<http:listener config-ref="listenerPagosYA" doc:name="HTTP" path="/*" />
        <cxf:jaxws-service serviceClass="esb.ServicioPago" doc:name="CXF"/>
        <!-- cxf:proxy-service doc:name="CXF" namespace="http://servicios.middleware.edu/pagosya" payload="body" port="PagosPort" service="PagosService" serviceClass="esb.ServicioPago"/-->
        <component class="esb.ServicioPago" doc:name="Java"/>

        <http:request config-ref="HTTP_Request_PagosYa" path="/PagosYa/Pagos/Pagos/pagos" method="POST" source="#[message.payload]" target="#[message.payload]"  doc:name="HTTP_PagosYa">
            <http:request-builder>
                <http:header headerName="Content-Type" value="application/json"/>


            </http:request-builder>
            <http:success-status-code-validator values="200,400"/>

        </http:request>
        <echo-component doc:name="Echo"/>
        <json:json-to-xml-transformer doc:name="JSON to XML"/>
        <echo-component doc:name="Echo"/>

    </flow>
    <flow name="Publisher">
		<http:listener config-ref="listenerPublisher" path="activemq" doc:name="HTTP"/>
		<cxf:jaxws-service serviceClass="amazoniacentral.EnvioJMS" doc:name="CXF"/>
		<component class="amazoniacentral.EnvioJMS" doc:name="Java"/>
        <jms:outbound-endpoint ref="JMS" connector-ref="ActiveMQ" doc:name="JMS">
            <jms:transaction action="NOT_SUPPORTED"/>
        </jms:outbound-endpoint>
	</flow>
    <flow name="SuscriberAnularReservaStock" initialState="started">
        <jms:inbound-endpoint topic="ActiveMQ" connector-ref="ActiveMQ" doc:name="JMS">
            <jms:transaction action="NOT_SUPPORTED"/>
        </jms:inbound-endpoint>
        <scatter-gather doc:name="Scatter-Gather">
            <processor-chain>
                <dw:transform-message doc:name="Transform Message Stock">
                    <dw:set-payload><![CDATA[%dw 1.0 
            %output application/xml
%namespace ns0 http://impl.stock.ws/
---
{
	ns0#anularReserva: {
		arg0: payload
	}
}]]></dw:set-payload>
                </dw:transform-message>
                <ws:consumer config-ref="Web_Service_Consumer" operation="anularReserva" doc:name="Web Service Consumer"/>
                <echo-component doc:name="Echo"/>
                <byte-array-to-string-transformer returnClass="java.lang.String" mimeType="application/xml" doc:name="Byte Array to String"/>
                <file:outbound-endpoint path="C:\log" outputPattern="salidaStockAnulada" responseTimeout="10000" doc:name="File" connector-ref="File"/>
            </processor-chain>
            <processor-chain>
                <byte-array-to-string-transformer returnClass="java.lang.String" mimeType="text/csv" doc:name="Format"/>
                <file:outbound-endpoint path="C:\ePuerto\anulacion" outputPattern="#[payload].csv" responseTimeout="10000" doc:name="File"/>
            </processor-chain>
        </scatter-gather>
    </flow>
    <flow name="reservaEPuerto">
        <http:listener config-ref="listenerReservaEpuerto" path="ConsultaStock" doc:name="HTTP"/>
        <cxf:jaxws-service serviceClass="amazoniacentral.ConsultaStock" doc:name="CXF">
                
        </cxf:jaxws-service>
        <set-variable variableName="idCompra" value="#[message.payload.idCompra]" doc:name="Variable"/>
        <set-variable variableName="idProducto" value="#[message.payload.idProducto]" doc:name="Variable"/>
        <component class="amazoniacentral.ConsultaStock" doc:name="Java"/>
        <file:outbound-endpoint path="C:\ePuerto\Recepcion" outputPattern="#[flowVars.idCompra]-#[flowVars.idProducto].csv" responseTimeout="10000" transformer-refs="CompraACsv" doc:name="File" connector-ref="File"/>
    </flow>
    <flow name="obtenerRespuestaEPuerto">
        <http:listener config-ref="listenerRespuestaEpuerto" path="ResponseStock" doc:name="HTTP"/>
        <cxf:jaxws-service doc:name="CXF" serviceClass="amazoniacentral.StockResponse"/>
        <component class="amazoniacentral.StockResponse" doc:name="Java"/>
    </flow>
	
	
    
</mule>
